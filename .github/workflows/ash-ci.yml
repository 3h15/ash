name: Ash CI
on:
  workflow_call:
    secrets:
      HEX_API_KEY:
        required: false
    inputs:
      spark-formatter:
        type: boolean
        default: true
      codegen:
        type: boolean
        default: false
      spark-cheat-sheets:
        type: boolean
        default: true
      sobelow:
        type: boolean
        default: true
      postgres:
        type: boolean
        default: false
      ash_postgres:
        type: boolean
        default: true
      ecto_postgres:
        type: boolean
        default: false
      postgres-version:
        type: string
        default: "14"
      sqlite:
        type: boolean
        default: false
      hex-api-key:
        type: string
      rustler-precompiled-var:
        type: string
      rustler-precompiled-module:
        type: string
      sat-solver:
        type: string
        default: "Picosat"
      igniter-upgrade:
        type: boolean
        default: true
env:
  PG_VERSION: ${{inputs.postgres-version}}
jobs:
  deps:
    name: mix deps.get
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/mix-deps-get@main

  auditor:
    name: audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/mix-hex-audit@main
      - uses: team-alembic/staple-actions/actions/mix-task@main
        with:
          task: deps.audit
  build-test:
    name: MIX_ENV=test mix.compile
    runs-on: ubuntu-latest
    needs:
      - deps
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/install-elixir@main
      - uses: team-alembic/staple-actions/actions/mix-compile@main
        with:
          mix-env: test
  build-docs:
    name: mix docs
    runs-on: ubuntu-latest
    needs:
      - build-test
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/mix-docs@main
        with:
          mix-env: dev
          use-cache?: false
      - uses: actions/upload-pages-artifact@v1
        with:
          path: doc/
  deploy-docs:
    name: Deploy docs to GitHub pages.
    runs-on: ubuntu-latest
    needs:
      - build-test
      - build-docs
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub pages
        id: deployment
        uses: actions/deploy-pages@v1

  formatter:
    name: mix format --check-formatted
    runs-on: ubuntu-latest
    needs:
      - build-test
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/mix-format@main
        with:
          mix-env: test

  spark-formatter:
    name: mix spark.formatter --check
    runs-on: ubuntu-latest
    needs:
      - build-test
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/mix-task@main
        if: ${{inputs.spark-formatter}}
        with:
          mix-env: test
          task: spark.formatter --check

  spark-cheat-sheets:
    name: mix spark.cheat_sheets --check
    runs-on: ubuntu-latest
    needs:
      - build-test
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/mix-task@main
        if: ${{inputs.spark-cheat-sheets}}
        with:
          mix-env: test
          task: spark.cheat_sheets --check
  sobelow:
    name: mix sobelow
    runs-on: ubuntu-latest
    needs:
      - build-test
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/mix-task@main
        if: ${{inputs.sobelow}}
        with:
          mix-env: test
          task: sobelow
  credo:
    name: mix credo --strict
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/mix-credo@main
        if: ${{inputs.spark-formatter}}
        with:
          mix-env: test
  codegen:
    name: mix ash.codegen --check
    runs-on: ubuntu-latest
    needs:
      - build-test
    if: ${{inputs.codegen}}
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/mix-task@main
        with:
          mix-env: test
          task: ash.codegen --check
  unused-deps:
    name: mix deps.unlock --check-unused
    runs-on: ubuntu-latest
    needs:
      - build-test
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/mix-task@main
        with:
          mix-env: test
          task: deps.unlock --check-unused
  igniter-upgrade:
    name: mix igniter.upgrade
    runs-on: ubuntu-latest
    if: ${{inputs.igniter-upgrade}}
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2
        if: github.event.pull_request.user.login == 'dependabot[bot]'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
        if: github.event.pull_request.user.login == 'dependabot[bot]'
      - uses: team-alembic/staple-actions/actions/mix-task@main
        with:
          task: igniter.upgrade --git-ci --yes
        if: github.event.pull_request.user.login == 'dependabot[bot]'
      - name: Commit Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        if: github.event.pull_request.user.login == 'dependabot[bot]'
        with:
          commit_message: "[dependabot skip] Apply Igniter Upgrades"
          commit_user_name: dependabot[bot]
  test:
    name: mix test
    runs-on: ubuntu-latest
    needs:
      - build-test
    services:
      postgres:
        image: postgres:${{inputs.postgres-version}}
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/mix-task@main
        if: ${{inputs.postgres && inputs.ash_postgres}}
        with:
          mix-env: test
          task: ash_postgres.generate_migrations --check
      - uses: team-alembic/staple-actions/actions/mix-task@main
        with:
          mix-env: test
          task: ash_postgres.create
        if: ${{inputs.postgres && inputs.ash_postgres}}
      - uses: team-alembic/staple-actions/actions/mix-task@main
        with:
          mix-env: test
          task: ecto.create
        if: ${{inputs.postgres && inputs.ecto_postgres}}
      - uses: team-alembic/staple-actions/actions/mix-task@main
        with:
          mix-env: test
          task: ash_postgres.migrate
        if: ${{inputs.postgres && inputs.ash_postgres}}
      - uses: team-alembic/staple-actions/actions/mix-task@main
        with:
          mix-env: test
          task: ash_postgres.migrate --tenants
        if: ${{inputs.postgres && inputs.ash_postgres}}
      - uses: team-alembic/staple-actions/actions/mix-task@main
        with:
          mix-env: test
          task: ecto.migrate
        if: ${{inputs.postgres && inputs.ecto_postgres}}
      - uses: team-alembic/staple-actions/actions/mix-task@main
        with:
          mix-env: test
          task: ash_sqlite.generate_migrations --check
        if: ${{inputs.sqlite}}
      - uses: team-alembic/staple-actions/actions/mix-task@main
        with:
          mix-env: test
          task: ash_sqlite.create
        if: ${{inputs.sqlite}}
      - uses: team-alembic/staple-actions/actions/mix-task@main
        with:
          mix-env: test
          task: ash_sqlite.migrate
        if: ${{inputs.sqlite}}
      - uses: team-alembic/staple-actions/actions/mix-test@main
        with:
          mix-env: test
        env:
          PGUSER: postgres
          PGPASS: postgres
          PGHOST: postgres

  dialyzer:
    name: mix dialyzer
    runs-on: ubuntu-latest
    needs:
      - build-test
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/mix-dialyzer@main
        with:
          mix-env: dev

  build-dev:
    name: MIX_ENV=dev mix.compile
    runs-on: ubuntu-latest
    needs:
      - build-test
    steps:
      - uses: actions/checkout@v3
      - uses: team-alembic/staple-actions/actions/mix-compile@main
        with:
          mix-env: dev
  release:
    needs:
      - credo
      - unused-deps
      - spark-formatter
      - spark-cheat-sheets
      - igniter-upgrade
      - sobelow
      - formatter
      - auditor
      - test
      - dialyzer
      - build-dev
      - deps
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    name: Release
    steps:
      - uses: actions/checkout@v3
      - id: setEnv
        run: |
          echo 'ENV={ "${{inputs.rustler-precompiled-var}}": "1"}' >> $GITHUB_OUTPUT    
        if: ${{inputs.rustler-precompiled-var && inputs.rustler-precompiled-module}} 
      - uses: team-alembic/staple-actions/actions/mix-task@main
        if: ${{inputs.rustler-precompiled-var && inputs.rustler-precompiled-module}} 
        env: ${{ fromJson(steps.setEnv.outputs.ENV) }}
        with:
          task: rustler_precompiled.download ${{inputs.rustler-precompiled-module}} --only-local
      - uses: team-alembic/staple-actions/actions/mix-hex-publish@main
        with:
          mix-env: dev
          hex-api-key: ${{secrets.HEX_API_KEY}}
